We're going to make a count, a dictionary, a histogram pattern, so we're going to create an empty dictionary. We're going to have this line variable that's going to iterate through all the lines in the file, this is going to run once for every line in the file. We actually don't have to do the strip because the split kind of does a strip for us automatically it ignores spaces at the end, and so we don't really have to do a strip. You could do a strip here, but it wouldn't hurt. You think of this file as like word, word, word, word, word a second line word, word, word word, word, word, word, word. But this outer for loop is going through line for line. And then we do the split, which gives us each of these words. And now we have an inner for loop and that's going to go through each of the words in the file, right? So this is a word in words. This is still one line. So we're going to go through the words and we're going to say counts sub word equals counts.get word; this is that idiom, go back to that part. I won't explain that. That just makes the histogram, makes the histogram, right? And we're going to end up accumulating these counts over the entire file. So this is two loops. We're going to each line, then we're going through the words in the line, then we go to the next line, then we go through the words in the next line. And then we're making a histogram as we go, you know, a little histogram is building up for the different words and the histogram is extending. At this point in the code, inside counts we have a complete histogram of every word on every line of that file. And now all we have to do is figure out what the largest one was. And this takes us back to a couple of chapters ago where we were looking for the largest. Okay? You can't use the max function here, because it's all sort of hidden inside this dictionary. So what we're going to do is we got this histogram in counts, you know. It's the words, word, word, word, and then, you know, the little things counted up, right? So we're going to look through here and we're going to look for the tallest one and then we're going to remember both what the count was and what the word is. And so we're going to make a variable called the biggest count that we've seen so far and the word that is associated with that biggest count. So I'll call my variables bigcount and bigword. And so now I'm going to have iteration go through the items, which is the key-value pairs. So word is going to, the word variable is going to go through all the keys and the count is going to go through all the values, the numbers. And we're doing a maximum loop. And if the big count is None, which means we're on the first word, or the count we're looking at for the particular item we're looking at, you know, 4, is bigger than the previous one, 1, if it's the first one or if count is greater than the biggest count, then remember it. This is kind of the remember. We're going to remember what the word was that we had that, where we saw the biggest number, we're remembering the word and we're going to remember the count. And then we'll do this a bunch of times and if we find later, much later, some thing that's got a little higher number, like, you know, 8 or something, then we will fix that as well, okay? And so this runs all the way through all the things. And when it comes out bigword and bigcount, the residual at the end of the loop, the residual stuff at the end of the loop, will be the largest word and how many times. And so all that magic is happening sort of from here to here, that magic happens. And in words.txt, we see that the word "to" is the most common and it's seen 16 times. And in the clown text that we've been playing with, the word "the" happens and it's 7 times. And that's the magic. So this is a slide that if you don't understand every single character, every single, you know, why is the word None? What did the word None mean? It's time to go back and check, right? This is a time to review. This is the time to understand what we're talking about, because we're just going to get crazier from here and this is really important basics because this is a complete program that does something non-trivial. OK? So remember this slide. Okay? So we have talked about dictionaries. We've compared them to lists. We've shown how to use the get operation. We've looped through files. We took a look at tuples, tuples is what we are going to talk about next. And we're going to sneak peek - we'll talk about sorting dictionaries coming up next.